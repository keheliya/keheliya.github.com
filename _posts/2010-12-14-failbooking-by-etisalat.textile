---
layout: post
title: Failbooking by Etisalat
---

<div class="zemanta-img" style="display:block;margin:1em;">
<div class="mceTemp" style="text-align:justify;"><dl class="wp-caption alignleft"> <dt class="wp-caption-dt"><a href="http://www.crunchbase.com/company/facebook"><img title="Image representing Facebook as depicted in Cru..." src="http://www.crunchbase.com/assets/images/resized/0000/4561/4561v1-max-450x450.png" alt="Image representing Facebook as depicted in Cru..." width="245" height="100" /></a></dt> <dd class="wp-caption-dd zemanta-img-attribution">Image via <a href="http://www.crunchbase.com">CrunchBase</a></dd> </dl></div>
</div>
You may call me paranoid or over-cautious after reading this. I wanted to write about this long ago, as soon as I heard this advertisement and thought its totally insane. But I was busy. Thanks to the most gruelling bloodshed of recent times in one of the prestigious higher educational institutes of the country, I get the chance to pick one of the drafts left in my blog. Here it goes..

<a href="http://galpotha.files.wordpress.com/2010/12/download-2.png">[gallery link="file" columns="4" orderby="ID"]
</a>

<a href="http://galpotha.files.wordpress.com/2010/12/download-1.png">
</a>
Recently, <a href="http://www.etisalat.lk">Etisalat</a>, a mobile service provider <a href="http://www.etisalat.lk/VASNetworking.cfm?page=FB">advertised</a> a scheme for users to chat in facebook via SMS and the two ways they are suggesting the users to register has fundamental flaws. As the method 1 they want users to <a href="http://fb.etisalat.lk/fb/User.action?action=Register">enter</a> their facebook username and password at their own site <a href="http://www.etisalat.lk">www.etisalat.lk</a>. In the next method they <a href="http://fb.etisalat.lk/fb/User.action?action=Help">suggest</a> users to SMS their username and password to a number.

As it is being discussed over and over again by people like <a title="Jeff Atwood" rel="homepage" href="http://www.codinghorror.com/">Jeff Atwood</a> and <a href="http://www.25hoursaday.com/weblog/default.aspx">Dare Obasanjo</a>, as a third party, its wrong to ask the user to "<a href="http://www.codinghorror.com/blog/2008/06/please-give-us-your-email-password.html">Please Give Us Your Email Password</a>". You may be trying to help. But some may consider it offensive. You are asking for the keys of their online identity.

Next thing, is it ok to allow users get comfortable with entering their credentials in all sorts of random places, and make them <a href="http://www.25hoursaday.com/weblog/PermaLink.aspx?guid=59a03a48-3584-465e-8072-a254ec933b32">more susceptible to phishing attacks</a>?

Then, asking them to SMS the credentials as plain text! huh? In this era of <a class="zem_slink" title="Wikileaks" rel="homepage" href="http://www.wikileaks.org/">WikiLeaks</a>? How can the user be confident that these usernames are not going to rest in a databse as plain text, where an employee with malicious intents, can copy them with a mouse click and sell for a fortune?? <a href="http://www.codinghorror.com/blog/2007/09/youre-probably-storing-passwords-incorrectly.html">You're Probably Storing Passwords Incorrectly!!!</a>

<a href="http://www.codinghorror.com/blog/2007/09/youre-probably-storing-passwords-incorrectly.html"></a>I don't think engineers at Etisalat didn't know about <a class="zem_slink" title="OAuth" rel="homepage" href="http://oauth.net">OAuth</a> or <a href="http://developers.facebook.com/docs/guides/web">Facebook Connect</a> or simple way of coming to an agreement with Facebook to send a confirmation code to user's phone without making them SMS passwords. Did they misused the illiteracy of majority of Sri Lankan internet users, teaching them bad habits and let their online identities be compromised? or simply is somebody being lazy?

For example, OAuth is a technology that has been built for enabling applications to access Twitter/Facebook on users' behalf with their approval without asking them directly for the password. So the users will be more willing to use your service.

And one more thing. In your method all will work fine, until they change their Twitter/Facebook password. This is one of the major things <a href="http://benward.me/blog/oauth-flow">OAuth solves</a> - The users' access is not tied to their current username/password combination, so they're free to change it without having to update a couple dozen external apps.

So why choose the hard, insecure, inconvenient way? There may <a href="http://arstechnica.com/open-source/guides/2010/01/oauth-and-oauth-wrap-defeating-the-password-anti-pattern.ars">not be a perfect security solution</a>. But it is always good not to hide these critical information and keep them informed. As professionals, let us not only teach people to use technology, but also to do it in the safer, efficient and right way.